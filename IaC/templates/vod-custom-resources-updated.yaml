AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Video on Demand Custom Resources for MediaConvert and MediaPackage
  Based on AWS Video on Demand Solution v6.1.13

Parameters:
  StackName:
    Type: String
    Description: Name of the VOD stack for resource naming
    Default: vod-stack

  AdminEmail:
    Type: String
    AllowedPattern: '^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{2,})$'
    Description: Email address for SNS notifications

  WorkflowTrigger:
    Type: String
    Default: VideoFile
    AllowedValues:
      - VideoFile
      - MetadataFile
    Description: How the workflow will be triggered

  Glacier:
    Type: String
    Default: DISABLED
    AllowedValues:
      - DISABLED
      - GLACIER
      - DEEP_ARCHIVE
    Description: Archive source assets to Glacier or Glacier Deep Archive

  FrameCapture:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: Enable frame capture in MediaConvert jobs

  EnableMediaPackage:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: Enable MediaPackage VOD in the workflow

  EnableSns:
    Type: String
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: Enable SNS notifications

  EnableSqs:
    Type: String
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: Enable SQS messaging

  AcceleratedTranscoding:
    Type: String
    Default: PREFERRED
    AllowedValues:
      - ENABLED
      - DISABLED
      - PREFERRED
    Description: Enable accelerated transcoding in MediaConvert

  SourceBucketArn:
    Type: String
    Description: ARN of the source S3 bucket

  DestinationBucketArn:
    Type: String
    Description: ARN of the destination S3 bucket

  CloudFrontDistributionId:
    Type: String
    Description: CloudFront distribution ID
    Default: ''

Conditions:
  EnableMediaPackageCondition:
    !Equals [!Ref EnableMediaPackage, 'Yes']
  
  FrameCaptureCondition:
    !Equals [!Ref FrameCapture, 'Yes']
  
  EnableSnsCondition:
    !Equals [!Ref EnableSns, 'Yes']
  
  EnableSqsCondition:
    !Equals [!Ref EnableSqs, 'Yes']

Resources:
  # Custom Resource Lambda Function Role
  CustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CustomResourcePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*'
              - Effect: Allow
                Action:
                  - s3:PutBucketNotification
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource: !Ref SourceBucketArn
              - Effect: Allow
                Action:
                  - mediaconvert:CreatePreset
                  - mediaconvert:CreateJobTemplate
                  - mediaconvert:DeletePreset
                  - mediaconvert:DeleteJobTemplate
                  - mediaconvert:DescribeEndpoints
                  - mediaconvert:ListJobTemplates
                  - mediaconvert:TagResource
                  - mediaconvert:UntagResource
                Resource: !Sub 'arn:${AWS::Partition}:mediaconvert:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - mediapackage-vod:CreateAsset
                  - mediapackage-vod:CreatePackagingConfiguration
                  - mediapackage-vod:CreatePackagingGroup
                  - mediapackage-vod:DeleteAsset
                  - mediapackage-vod:DeletePackagingConfiguration
                  - mediapackage-vod:DeletePackagingGroup
                  - mediapackage-vod:DescribePackagingGroup
                  - mediapackage-vod:ListAssets
                  - mediapackage-vod:ListPackagingConfigurations
                  - mediapackage-vod:ListPackagingGroups
                  - mediapackage-vod:TagResource
                  - mediapackage-vod:UntagResource
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudfront:GetDistributionConfig
                  - cloudfront:UpdateDistribution
                Resource: !Sub 'arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:distribution/*'
      Tags:
        - Key: SolutionId
          Value: SO0021

  # Custom Resource Lambda Function
  CustomResourceLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${StackName}-custom-resource'
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt CustomResourceRole.Arn
      Timeout: 300
      MemorySize: 256
      Environment:
        Variables:
          SOLUTION_IDENTIFIER: AwsSolution/SO0021/v6.1.13
      Code:
        ZipFile: |
          // Custom Resource Lambda - deployed via Terraform
          exports.handler = async (event, context) => {
            console.log('Custom Resource Lambda placeholder');
            return { Status: 'SUCCESS' };
          };
      Tags:
        - Key: SolutionId
          Value: SO0021

  # MediaConvert Endpoint Discovery
  MediaConvertEndPoint:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      Resource: EndPoint
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  # MediaConvert Job Templates
  MediaConvertTemplates:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      Resource: MediaConvertTemplates
      StackName: !Ref StackName
      EndPoint: !GetAtt MediaConvertEndPoint.EndpointUrl
      EnableMediaPackage: !If [EnableMediaPackageCondition, 'true', 'false']
      EnableNewTemplates: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    DependsOn: MediaConvertEndPoint

  # MediaPackage VOD Resources
  MediaPackageVod:
    Type: AWS::CloudFormation::CustomResource
    Condition: EnableMediaPackageCondition
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      Resource: MediaPackageVod
      StackName: !Ref StackName
      GroupId: !Sub '${StackName}-packaging-group'
      PackagingConfigurations: 'HLS,DASH,MSS,CMAF'
      DistributionId: !Ref CloudFrontDistributionId
      EnableMediaPackage: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  # MediaConvert Service Role
  MediaConvertRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${StackName}-mediaconvert-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: mediaconvert.amazonaws.com
            Action: sts:AssumeRole
      Tags:
        - Key: SolutionId
          Value: SO0021

  # MediaConvert Service Policy
  MediaConvertPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${StackName}-mediaconvert-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource:
              - !Sub '${SourceBucketArn}/*'
              - !Sub '${DestinationBucketArn}/*'
          - Effect: Allow
            Action: execute-api:Invoke
            Resource: !Sub 'arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:*'
      Roles:
        - !Ref MediaConvertRole

  # MediaPackage VOD Service Role
  MediaPackageVodRole:
    Type: AWS::IAM::Role
    Condition: EnableMediaPackageCondition
    Properties:
      RoleName: !Sub '${StackName}-mediapackage-vod-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: mediapackage.amazonaws.com
            Action: sts:AssumeRole
      Tags:
        - Key: SolutionId
          Value: SO0021

  # MediaPackage VOD Service Policy
  MediaPackageVodPolicy:
    Type: AWS::IAM::Policy
    Condition: EnableMediaPackageCondition
    Properties:
      PolicyName: !Sub '${StackName}-mediapackage-vod-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetBucketLocation
              - s3:GetBucketRequestPayment
            Resource:
              - !Ref DestinationBucketArn
              - !Sub '${DestinationBucketArn}/*'
      Roles:
        - !Ref MediaPackageVodRole

  # UUID Generator for Anonymized Metrics
  UUID:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      Resource: UUID
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  # Anonymized Metrics
  AnonymizedMetric:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      Resource: AnonymizedMetric
      SolutionId: SO0021
      UUID: !GetAtt UUID.UUID
      Version: v6.1.13
      Transcoder: MediaConvert
      WorkflowTrigger: !Ref WorkflowTrigger
      Glacier: !Ref Glacier
      FrameCapture: !Ref FrameCapture
      EnableMediaPackage: !Ref EnableMediaPackage
      SendAnonymizedMetric: 'Yes'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

Outputs:
  MediaConvertEndpointUrl:
    Description: MediaConvert endpoint URL
    Value: !GetAtt MediaConvertEndPoint.EndpointUrl
    Export:
      Name: !Sub '${StackName}:MediaConvertEndpoint'

  MediaConvertRoleArn:
    Description: MediaConvert service role ARN
    Value: !GetAtt MediaConvertRole.Arn
    Export:
      Name: !Sub '${StackName}:MediaConvertRole'

  MediaConvertTemplates:
    Description: Created MediaConvert job templates
    Value: !GetAtt MediaConvertTemplates.Templates
    Export:
      Name: !Sub '${StackName}:MediaConvertTemplates'

  MediaPackageGroupId:
    Condition: EnableMediaPackageCondition
    Description: MediaPackage VOD packaging group ID
    Value: !GetAtt MediaPackageVod.GroupId
    Export:
      Name: !Sub '${StackName}:MediaPackageGroupId'

  MediaPackageGroupDomainName:
    Condition: EnableMediaPackageCondition
    Description: MediaPackage VOD packaging group domain name
    Value: !GetAtt MediaPackageVod.GroupDomainName
    Export:
      Name: !Sub '${StackName}:MediaPackageGroupDomainName'

  MediaPackageVodRoleArn:
    Condition: EnableMediaPackageCondition
    Description: MediaPackage VOD service role ARN
    Value: !GetAtt MediaPackageVodRole.Arn
    Export:
      Name: !Sub '${StackName}:MediaPackageVodRole'

  MediaPackagePackagingConfigurations:
    Condition: EnableMediaPackageCondition
    Description: Created MediaPackage packaging configurations
    Value: !GetAtt MediaPackageVod.PackagingConfigurations
    Export:
      Name: !Sub '${StackName}:MediaPackagePackagingConfigurations'

  SolutionUUID:
    Description: Solution UUID for anonymized metrics
    Value: !GetAtt UUID.UUID
    Export:
      Name: !Sub '${StackName}:SolutionUUID'

  # Template Names for different resolutions and types
  Template2160pQVBR:
    Description: 2160p QVBR MediaConvert job template name
    Value: !Sub '${StackName}_Ott_2160p_Avc_Aac_16x9_qvbr_no_preset'
    Export:
      Name: !Sub '${StackName}:Template2160pQVBR'

  Template1080pQVBR:
    Description: 1080p QVBR MediaConvert job template name
    Value: !Sub '${StackName}_Ott_1080p_Avc_Aac_16x9_qvbr_no_preset'
    Export:
      Name: !Sub '${StackName}:Template1080pQVBR'

  Template720pQVBR:
    Description: 720p QVBR MediaConvert job template name
    Value: !Sub '${StackName}_Ott_720p_Avc_Aac_16x9_qvbr_no_preset'
    Export:
      Name: !Sub '${StackName}:Template720pQVBR'

  Template2160pMVOD:
    Condition: EnableMediaPackageCondition
    Description: 2160p MVOD MediaConvert job template name
    Value: !Sub '${StackName}_Ott_2160p_Avc_Aac_16x9_mvod_no_preset'
    Export:
      Name: !Sub '${StackName}:Template2160pMVOD'

  Template1080pMVOD:
    Condition: EnableMediaPackageCondition
    Description: 1080p MVOD MediaConvert job template name
    Value: !Sub '${StackName}_Ott_1080p_Avc_Aac_16x9_mvod_no_preset'
    Export:
      Name: !Sub '${StackName}:Template1080pMVOD'

  Template720pMVOD:
    Condition: EnableMediaPackageCondition
    Description: 720p MVOD MediaConvert job template name
    Value: !Sub '${StackName}_Ott_720p_Avc_Aac_16x9_mvod_no_preset'
    Export:
      Name: !Sub '${StackName}:Template720pMVOD'

  TemplateUniversalQVBR:
    Description: Universal CMAF QVBR MediaConvert job template name
    Value: !Sub '${StackName}_Ott_universal_Avc_Aac_16x9_qvbr_no_preset'
    Export:
      Name: !Sub '${StackName}:TemplateUniversalQVBR'

  TemplateUniversalMVOD:
    Condition: EnableMediaPackageCondition
    Description: Universal CMAF MVOD MediaConvert job template name
    Value: !Sub '${StackName}_Ott_universal_Avc_Aac_16x9_mvod_no_preset'
    Export:
      Name: !Sub '${StackName}:TemplateUniversalMVOD'
